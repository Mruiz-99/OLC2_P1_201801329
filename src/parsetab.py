
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftIGUALQUENIGUALQUEMENQUEMAYQUEMAYIGQUEMENIGQUEleftMASMENOSleftPORDIVIDIDOMODnonassocPOTENCIArightUMENOSrightUNOTAND BOOLEANO BREAK CADENA CARACTER CHAR COMA CONTINUE CORDER CORIZQ DECIMAL DECIMAL64 DIVIDIDO DOSPT ELSE ELSEIF END ENTERO ENTERO64 ESTRUCTURA FALSO FOR FUNC GLOBAL ID IF IGUAL IGUALQUE IMPRIMIR IMPRIMIRSALTO IN LEN LLAVDER LLAVIZQ LOCAL LOWER MAS MAYIGQUE MAYQUE MENIGQUE MENOS MENQUE MIENTRAS MOD MUTABLE NIGUALQUE NOT NULO OR PARDER PARIZQ PARSE POR POTENCIA PTCOMA PUNTO PUNTOS RETORNO STRING TRUNC UPPER VERDADEROinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | mientras_instr\n                        | if_instr\n                        | funcion_instr\n                        | llamada_funcion_instr PTCOMA\n                        | createStruct \n                        | declareStructST PTCOMA\n                        | assignAccessST PTCOMA \n                        | retorno_inst\n                        | break_inst\n                        | continue_inst\n                        | for_instrimprimir_instr     : IMPRIMIR PARIZQ expresion PARDER PTCOMA\n                          | IMPRIMIRSALTO PARIZQ expresion PARDER PTCOMA\n                          | IMPRIMIR PARIZQ l_exp PARDER PTCOMA\n                          | IMPRIMIRSALTO PARIZQ l_exp PARDER PTCOMA\n    retorno_inst     : RETORNO  expresion  PTCOMA\n                        | RETORNO  PTCOMA\n    break_inst       : BREAK PTCOMA\n    continue_inst       : CONTINUE PTCOMA\n    definicion_instr   : LOCAL asignacion_instr\n                          | GLOBAL asignacion_instr\n    asignacion_instr   : ID IGUAL expresion PTCOMA\n                          | ID IGUAL expresion DOSPT tipo_var PTCOMA\n                        \n    tipo_var   : ENTERO64\n                  | DECIMAL64\n                  | BOOLEANO\n                  | CHAR\n                  | STRING\n    mientras_instr     : MIENTRAS expresion instrucciones END PTCOMAfor_instr     : FOR ID IN expresion PUNTOS expresion instrucciones END PTCOMA\n                     | FOR ID IN expresion instrucciones END PTCOMA\n                     if_instr   : IF expresion instrucciones END PTCOMAif_instr   : IF  expresion instrucciones ELSE instrucciones END PTCOMAif_instr    : IF expresion instrucciones elseIfList END PTCOMAelseIfList   : ELSEIF expresion instrucciones\n                    | ELSEIF expresion instrucciones ELSE instrucciones\n                    | ELSEIF expresion instrucciones elseIfListcreateStruct : ESTRUCTURA ID attList END PTCOMAattList :  attList PTCOMA ID DOSPT tipo_var PTCOMA\n                | attList PTCOMA ID PTCOMA\n                | ID\n                | ID DOSPT tipo_vardeclareStructST : ID DOSPT IDassignAccessST : ID PUNTO ID IGUAL expresionl_exp      : l_exp COMA expresion \n    l_exp    : expresion funcion_instr   : FUNC ID PARIZQ PARDER DOSPT tipo_var instrucciones END PTCOMA\n                       | FUNC ID PARIZQ parametros PARDER DOSPT tipo_var instrucciones END PTCOMAparametros :       parametros COMA ID tipo_var\n                        | ID tipo_varllamada_funcion_instr   :  ID PARIZQ PARDER\n                                | ID PARIZQ expList PARDER expList :  expList COMA expresion\n                | expresionexpArray :  expArray COMA expresion\n                | expresionexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresion\n                  | expresion OR expresion\n                  | expresion AND expresion\n                  | expresion IGUALQUE expresion\n                  | expresion NIGUALQUE expresion\n                  | expresion MAYQUE expresion\n                  | expresion MENQUE expresion\n                  | expresion MAYIGQUE expresion\n                  | expresion MENIGQUE expresion\n                  | expresion POTENCIA expresion\n                  | expresion MOD expresion\n                  | finalExp\n                  finalExp : llamada_funcion_instr\n                | accessSTaccessST : ID PUNTO IDexpresion : MENOS expresion %prec UMENOS\n                    | NOT expresion %prec UNOTexpresion : PARIZQ expresion PARDERexpresion : IDexpresion : ID CORIZQ ENTERO CORDERexpresion : ENTEROexpresion : CORIZQ l_exp CORDERexpresion : DECIMALexpresion : CARACTERexpresion : CADENAexpresion : VERDADEROexpresion : FALSOexpresion     : UPPER PARIZQ expresion PARDER\n                     | LOWER PARIZQ expresion PARDER\n                     | LEN PARIZQ expresion PARDER\n                     | PARSE PARIZQ tipo_var COMA expresion PARDER\n                     | TRUNC PARIZQ expresion PARDER\n                     | STRING PARIZQ expresion PARDERexpresion     : CADENA POTENCIA ENTERO'
    
_lr_action_items = {'IMPRIMIR':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[18,18,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,18,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,18,-23,-24,-25,-57,18,-81,-82,18,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,18,18,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,18,18,-44,18,-29,-40,18,18,18,-96,-39,18,18,18,18,-37,18,18,-53,-36,-54,]),'IMPRIMIRSALTO':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[19,19,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,19,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,19,-23,-24,-25,-57,19,-81,-82,19,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,19,19,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,19,19,-44,19,-29,-40,19,19,19,-96,-39,19,19,19,19,-37,19,19,-53,-36,-54,]),'LOCAL':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[20,20,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,20,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,20,-23,-24,-25,-57,20,-81,-82,20,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,20,20,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,20,20,-44,20,-29,-40,20,20,20,-96,-39,20,20,20,20,-37,20,20,-53,-36,-54,]),'GLOBAL':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[21,21,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,21,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,21,-23,-24,-25,-57,21,-81,-82,21,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,21,21,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,21,21,-44,21,-29,-40,21,21,21,-96,-39,21,21,21,21,-37,21,21,-53,-36,-54,]),'ID':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,20,21,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,63,64,65,67,69,70,71,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,106,107,108,110,111,112,113,116,117,120,123,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,162,168,169,170,171,173,174,178,179,180,181,182,183,184,185,186,187,189,193,195,197,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[22,22,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,38,38,49,49,66,67,49,72,-2,-10,-12,-13,49,49,-26,-27,49,78,49,82,22,49,-77,49,49,-84,49,-86,-88,-89,-90,-91,-92,-78,-79,22,114,-23,-24,-25,-57,22,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-81,-82,145,49,49,49,49,49,22,163,-22,49,49,-28,-58,49,49,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,22,49,196,22,-18,-20,-19,-21,-35,-85,-93,-94,-95,49,-97,-98,-38,22,22,206,-44,49,22,-29,-40,22,22,22,-96,-39,22,22,22,22,-37,22,22,-53,-36,-54,]),'MIENTRAS':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[23,23,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,23,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,23,-23,-24,-25,-57,23,-81,-82,23,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,23,23,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,23,23,-44,23,-29,-40,23,23,23,-96,-39,23,23,23,23,-37,23,23,-53,-36,-54,]),'IF':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[24,24,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,24,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,24,-23,-24,-25,-57,24,-81,-82,24,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,24,24,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,24,24,-44,24,-29,-40,24,24,24,-96,-39,24,24,24,24,-37,24,24,-53,-36,-54,]),'FUNC':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[25,25,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,25,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,25,-23,-24,-25,-57,25,-81,-82,25,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,25,25,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,25,25,-44,25,-29,-40,25,25,25,-96,-39,25,25,25,25,-37,25,25,-53,-36,-54,]),'ESTRUCTURA':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[26,26,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,26,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,26,-23,-24,-25,-57,26,-81,-82,26,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,26,26,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,26,26,-44,26,-29,-40,26,26,26,-96,-39,26,26,26,26,-37,26,26,-53,-36,-54,]),'RETORNO':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[27,27,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,27,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,27,-23,-24,-25,-57,27,-81,-82,27,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,27,27,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,27,27,-44,27,-29,-40,27,27,27,-96,-39,27,27,27,27,-37,27,27,-53,-36,-54,]),'BREAK':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[28,28,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,28,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,28,-23,-24,-25,-57,28,-81,-82,28,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,28,28,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,28,28,-44,28,-29,-40,28,28,28,-96,-39,28,28,28,28,-37,28,28,-53,-36,-54,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[29,29,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,29,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,29,-23,-24,-25,-57,29,-81,-82,29,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,29,29,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,29,29,-44,29,-29,-40,29,29,29,-96,-39,29,29,29,29,-37,29,29,-53,-36,-54,]),'FOR':([0,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,44,46,49,51,52,53,54,55,56,63,64,65,69,70,71,79,83,98,99,112,116,123,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,160,169,170,171,173,174,178,179,180,181,182,184,185,186,187,189,195,198,199,202,203,204,209,211,212,213,215,216,219,220,221,223,226,228,229,],[30,30,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,30,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,30,-23,-24,-25,-57,30,-81,-82,30,-22,-28,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,30,30,-18,-20,-19,-21,-35,-85,-93,-94,-95,-97,-98,-38,30,30,-44,30,-29,-40,30,30,30,-96,-39,30,30,30,30,-37,30,30,-53,-36,-54,]),'$end':([1,2,3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,69,70,71,116,123,170,171,173,174,178,186,195,199,202,212,220,226,228,229,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,-23,-24,-25,-22,-28,-18,-20,-19,-21,-35,-38,-44,-29,-40,-39,-37,-53,-36,-54,]),'END':([3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,69,70,71,83,112,114,115,116,123,152,153,154,155,156,161,170,171,173,174,178,186,187,194,195,198,199,202,203,207,212,214,215,219,220,221,223,224,226,228,229,],[-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,-23,-24,-25,128,159,-47,167,-22,-28,-30,-31,-32,-33,-34,188,-18,-20,-19,-21,-35,-38,201,-48,-44,210,-29,-40,-41,-46,-39,-43,222,225,-37,-42,227,-45,-53,-36,-54,]),'ELSE':([3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,69,70,71,112,116,123,170,171,173,174,178,186,195,199,202,203,212,220,226,228,229,],[-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,-23,-24,-25,160,-22,-28,-18,-20,-19,-21,-35,-38,-44,-29,-40,213,-39,-37,-53,-36,-54,]),'ELSEIF':([3,4,5,6,7,8,9,11,14,15,16,17,31,32,33,34,37,39,69,70,71,112,116,123,170,171,173,174,178,186,195,199,202,203,212,220,226,228,229,],[-3,-4,-5,-6,-7,-8,-9,-11,-14,-15,-16,-17,-2,-10,-12,-13,-26,-27,-23,-24,-25,162,-22,-28,-18,-20,-19,-21,-35,-38,-44,-29,-40,162,-39,-37,-53,-36,-54,]),'PTCOMA':([10,12,13,27,28,29,46,49,51,52,53,54,55,56,63,64,68,77,78,79,98,99,114,115,118,119,121,122,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,152,153,154,155,156,159,167,175,177,179,180,181,182,184,185,188,194,196,201,207,210,211,218,222,224,225,227,],[32,33,34,69,70,71,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,116,123,-49,-57,-81,-82,-47,168,170,171,173,174,-58,178,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,-30,-31,-32,-33,-34,186,195,199,-50,-85,-93,-94,-95,-97,-98,202,-48,207,212,-46,220,-96,224,226,-45,228,229,]),'PARIZQ':([18,19,22,23,24,27,35,36,40,42,45,47,48,49,50,57,58,59,60,61,62,66,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[35,36,42,48,48,48,48,48,48,48,48,48,48,42,48,106,107,108,109,110,111,113,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'IGUAL':([22,38,82,],[40,40,127,]),'DOSPT':([22,46,49,51,52,53,54,55,56,63,64,77,79,98,99,114,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,164,179,180,181,182,184,185,192,196,211,],[41,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,124,-57,-81,-82,166,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,191,-85,-93,-94,-95,-97,-98,205,208,-96,]),'PUNTO':([22,49,],[43,102,]),'MENOS':([23,24,27,35,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,110,111,117,120,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,162,169,172,176,177,179,180,181,182,183,184,185,189,197,200,209,211,],[45,45,45,45,45,45,45,85,45,-77,45,45,-84,45,-86,-88,-89,-90,-91,-92,-78,-79,85,85,85,85,85,-57,85,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-81,-82,85,85,45,45,45,45,45,45,45,-58,45,45,-63,-64,-65,-66,85,85,85,85,85,85,85,85,-75,-76,-83,-80,-87,-99,85,85,85,85,85,45,85,85,85,85,-85,-93,-94,-95,45,-97,-98,85,45,85,85,-96,]),'NOT':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ENTERO':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,105,106,107,108,110,111,117,120,126,127,162,183,197,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,144,147,51,51,51,51,51,51,51,51,51,51,51,51,]),'CORIZQ':([23,24,27,35,36,40,42,45,47,48,49,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[50,50,50,50,50,50,50,50,50,50,101,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'DECIMAL':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'CARACTER':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'CADENA':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'VERDADERO':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FALSO':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'UPPER':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LOWER':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LEN':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'PARSE':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TRUNC':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'STRING':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,109,110,111,117,120,124,126,127,162,163,166,183,191,197,205,206,208,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,156,62,62,62,62,156,62,62,62,156,156,62,156,62,156,156,156,]),'PARDER':([42,46,49,51,52,53,54,55,56,63,64,73,74,75,76,79,80,81,98,99,100,113,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,152,153,154,155,156,157,158,165,172,176,179,180,181,182,184,185,190,200,211,217,],[79,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,118,119,121,122,-57,125,-60,-81,-82,143,164,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,180,181,182,-30,-31,-32,-33,-34,184,185,192,-51,-59,-85,-93,-94,-95,-97,-98,-56,211,-96,-55,]),'MAS':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[84,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,84,84,84,84,84,-57,84,-81,-82,84,84,-58,-63,-64,-65,-66,84,84,84,84,84,84,84,84,-75,-76,-83,-80,-87,-99,84,84,84,84,84,84,84,84,84,-85,-93,-94,-95,-97,-98,84,84,84,-96,]),'POR':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[86,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,86,86,86,86,86,-57,86,-81,-82,86,86,-58,86,86,-65,-66,86,86,86,86,86,86,86,86,-75,-76,-83,-80,-87,-99,86,86,86,86,86,86,86,86,86,-85,-93,-94,-95,-97,-98,86,86,86,-96,]),'DIVIDIDO':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[87,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,87,87,87,87,87,-57,87,-81,-82,87,87,-58,87,87,-65,-66,87,87,87,87,87,87,87,87,-75,-76,-83,-80,-87,-99,87,87,87,87,87,87,87,87,87,-85,-93,-94,-95,-97,-98,87,87,87,-96,]),'OR':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[88,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,88,88,88,88,88,-57,88,-81,-82,88,88,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,88,88,88,88,88,88,88,88,88,-85,-93,-94,-95,-97,-98,88,88,88,-96,]),'AND':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[89,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,89,89,89,89,89,-57,89,-81,-82,89,89,-58,-63,-64,-65,-66,89,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,89,89,89,89,89,89,89,89,89,-85,-93,-94,-95,-97,-98,89,89,89,-96,]),'IGUALQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[90,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,90,90,90,90,90,-57,90,-81,-82,90,90,-58,-63,-64,-65,-66,90,90,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,90,90,90,90,90,90,90,90,90,-85,-93,-94,-95,-97,-98,90,90,90,-96,]),'NIGUALQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[91,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,91,91,91,91,91,-57,91,-81,-82,91,91,-58,-63,-64,-65,-66,91,91,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,91,91,91,91,91,91,91,91,91,-85,-93,-94,-95,-97,-98,91,91,91,-96,]),'MAYQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[92,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,92,92,92,92,92,-57,92,-81,-82,92,92,-58,-63,-64,-65,-66,92,92,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,92,92,92,92,92,92,92,92,92,-85,-93,-94,-95,-97,-98,92,92,92,-96,]),'MENQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[93,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,93,93,93,93,93,-57,93,-81,-82,93,93,-58,-63,-64,-65,-66,93,93,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,93,93,93,93,93,93,93,93,93,-85,-93,-94,-95,-97,-98,93,93,93,-96,]),'MAYIGQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[94,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,94,94,94,94,94,-57,94,-81,-82,94,94,-58,-63,-64,-65,-66,94,94,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,94,94,94,94,94,94,94,94,94,-85,-93,-94,-95,-97,-98,94,94,94,-96,]),'MENIGQUE':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[95,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,95,95,95,95,95,-57,95,-81,-82,95,95,-58,-63,-64,-65,-66,95,95,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,95,95,95,95,95,95,95,95,95,-85,-93,-94,-95,-97,-98,95,95,95,-96,]),'POTENCIA':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[96,-77,-84,-86,-88,-89,105,-91,-92,-78,-79,96,96,96,96,96,-57,96,-81,-82,96,96,-58,96,96,96,96,96,96,96,96,96,96,96,96,None,96,-83,-80,-87,-99,96,96,96,96,96,96,96,96,96,-85,-93,-94,-95,-97,-98,96,96,96,-96,]),'MOD':([44,46,49,51,52,53,54,55,56,63,64,65,68,73,75,77,79,81,98,99,100,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,157,158,169,172,176,177,179,180,181,182,184,185,189,200,209,211,],[97,-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,97,97,97,97,97,-57,97,-81,-82,97,97,-58,97,97,-65,-66,97,97,97,97,97,97,97,97,-75,-76,-83,-80,-87,-99,97,97,97,97,97,97,97,97,97,-85,-93,-94,-95,-97,-98,97,97,97,-96,]),'COMA':([46,49,51,52,53,54,55,56,63,64,73,74,75,76,79,80,81,98,99,103,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,151,152,153,154,155,156,165,172,176,179,180,181,182,184,185,190,211,217,],[-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,-52,120,-52,120,-57,126,-60,-81,-82,120,-52,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,183,-30,-31,-32,-33,-34,193,-51,-59,-85,-93,-94,-95,-97,-98,-56,-96,-55,]),'CORDER':([46,49,51,52,53,54,55,56,63,64,79,98,99,103,104,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,172,179,180,181,182,184,185,211,],[-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,-57,-81,-82,146,-52,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,179,-80,-87,-99,-51,-85,-93,-94,-95,-97,-98,-96,]),'PUNTOS':([46,49,51,52,53,54,55,56,63,64,79,98,99,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,169,179,180,181,182,184,185,211,],[-77,-84,-86,-88,-89,-90,-91,-92,-78,-79,-57,-81,-82,-58,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-83,-80,-87,-99,197,-85,-93,-94,-95,-97,-98,-96,]),'IN':([72,],[117,]),'ENTERO64':([109,124,163,166,191,205,206,208,],[152,152,152,152,152,152,152,152,]),'DECIMAL64':([109,124,163,166,191,205,206,208,],[153,153,153,153,153,153,153,153,]),'BOOLEANO':([109,124,163,166,191,205,206,208,],[154,154,154,154,154,154,154,154,]),'CHAR':([109,124,163,166,191,205,206,208,],[155,155,155,155,155,155,155,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,44,65,160,169,189,204,209,213,216,],[2,83,112,187,198,203,215,219,221,223,]),'instruccion':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[3,31,3,3,31,31,3,3,31,3,31,31,3,3,3,31,3,31,31,31,]),'imprimir_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'definicion_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,20,21,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[6,6,37,39,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'mientras_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'funcion_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'llamada_funcion_instr':([0,2,23,24,27,35,36,40,42,44,45,47,48,50,65,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,112,117,120,126,127,160,162,169,183,187,189,197,198,203,204,209,213,215,216,219,221,223,],[10,10,63,63,63,63,63,63,63,10,63,63,63,63,10,10,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,10,63,63,63,63,10,63,10,63,10,10,63,10,10,10,10,10,10,10,10,10,10,]),'createStruct':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declareStructST':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'assignAccessST':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'retorno_inst':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'break_inst':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'continue_inst':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'for_instr':([0,2,44,65,83,112,160,169,187,189,198,203,204,209,213,215,216,219,221,223,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expresion':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[44,65,68,73,75,77,81,98,99,100,104,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,157,158,169,172,176,177,189,200,209,]),'finalExp':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'accessST':([23,24,27,35,36,40,42,45,47,48,50,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,107,108,110,111,117,120,126,127,162,183,197,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'l_exp':([35,36,50,],[74,76,103,]),'expList':([42,],[80,]),'attList':([67,],[115,]),'tipo_var':([109,124,163,166,191,205,206,208,],[151,175,190,194,204,216,217,218,]),'elseIfList':([112,203,],[161,214,]),'parametros':([113,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',217),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',222),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',228),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',232),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','gramatica.py',233),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',234),
  ('instruccion -> mientras_instr','instruccion',1,'p_instruccion','gramatica.py',235),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',236),
  ('instruccion -> funcion_instr','instruccion',1,'p_instruccion','gramatica.py',237),
  ('instruccion -> llamada_funcion_instr PTCOMA','instruccion',2,'p_instruccion','gramatica.py',238),
  ('instruccion -> createStruct','instruccion',1,'p_instruccion','gramatica.py',239),
  ('instruccion -> declareStructST PTCOMA','instruccion',2,'p_instruccion','gramatica.py',240),
  ('instruccion -> assignAccessST PTCOMA','instruccion',2,'p_instruccion','gramatica.py',241),
  ('instruccion -> retorno_inst','instruccion',1,'p_instruccion','gramatica.py',242),
  ('instruccion -> break_inst','instruccion',1,'p_instruccion','gramatica.py',243),
  ('instruccion -> continue_inst','instruccion',1,'p_instruccion','gramatica.py',244),
  ('instruccion -> for_instr','instruccion',1,'p_instruccion','gramatica.py',245),
  ('imprimir_instr -> IMPRIMIR PARIZQ expresion PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','gramatica.py',249),
  ('imprimir_instr -> IMPRIMIRSALTO PARIZQ expresion PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','gramatica.py',250),
  ('imprimir_instr -> IMPRIMIR PARIZQ l_exp PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','gramatica.py',251),
  ('imprimir_instr -> IMPRIMIRSALTO PARIZQ l_exp PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','gramatica.py',252),
  ('retorno_inst -> RETORNO expresion PTCOMA','retorno_inst',3,'p_instruccion_retornar','gramatica.py',261),
  ('retorno_inst -> RETORNO PTCOMA','retorno_inst',2,'p_instruccion_retornar','gramatica.py',262),
  ('break_inst -> BREAK PTCOMA','break_inst',2,'p_instruccion_romper','gramatica.py',270),
  ('continue_inst -> CONTINUE PTCOMA','continue_inst',2,'p_instruccion_continuar','gramatica.py',275),
  ('definicion_instr -> LOCAL asignacion_instr','definicion_instr',2,'p_instruccion_definicion','gramatica.py',280),
  ('definicion_instr -> GLOBAL asignacion_instr','definicion_instr',2,'p_instruccion_definicion','gramatica.py',281),
  ('asignacion_instr -> ID IGUAL expresion PTCOMA','asignacion_instr',4,'p_asignacion_instr','gramatica.py',286),
  ('asignacion_instr -> ID IGUAL expresion DOSPT tipo_var PTCOMA','asignacion_instr',6,'p_asignacion_instr','gramatica.py',287),
  ('tipo_var -> ENTERO64','tipo_var',1,'p_tipo_var','gramatica.py',297),
  ('tipo_var -> DECIMAL64','tipo_var',1,'p_tipo_var','gramatica.py',298),
  ('tipo_var -> BOOLEANO','tipo_var',1,'p_tipo_var','gramatica.py',299),
  ('tipo_var -> CHAR','tipo_var',1,'p_tipo_var','gramatica.py',300),
  ('tipo_var -> STRING','tipo_var',1,'p_tipo_var','gramatica.py',301),
  ('mientras_instr -> MIENTRAS expresion instrucciones END PTCOMA','mientras_instr',5,'p_mientras_instr','gramatica.py',310),
  ('for_instr -> FOR ID IN expresion PUNTOS expresion instrucciones END PTCOMA','for_instr',9,'p_for_instr','gramatica.py',314),
  ('for_instr -> FOR ID IN expresion instrucciones END PTCOMA','for_instr',7,'p_for_instr','gramatica.py',315),
  ('if_instr -> IF expresion instrucciones END PTCOMA','if_instr',5,'p_if_instr','gramatica.py',321),
  ('if_instr -> IF expresion instrucciones ELSE instrucciones END PTCOMA','if_instr',7,'p_if_else_instr','gramatica.py',325),
  ('if_instr -> IF expresion instrucciones elseIfList END PTCOMA','if_instr',6,'p_lista_elseif_instr','gramatica.py',329),
  ('elseIfList -> ELSEIF expresion instrucciones','elseIfList',3,'p_elseIfList','gramatica.py',333),
  ('elseIfList -> ELSEIF expresion instrucciones ELSE instrucciones','elseIfList',5,'p_elseIfList','gramatica.py',334),
  ('elseIfList -> ELSEIF expresion instrucciones elseIfList','elseIfList',4,'p_elseIfList','gramatica.py',335),
  ('createStruct -> ESTRUCTURA ID attList END PTCOMA','createStruct',5,'p_createStruct','gramatica.py',346),
  ('attList -> attList PTCOMA ID DOSPT tipo_var PTCOMA','attList',6,'p_attList','gramatica.py',350),
  ('attList -> attList PTCOMA ID PTCOMA','attList',4,'p_attList','gramatica.py',351),
  ('attList -> ID','attList',1,'p_attList','gramatica.py',352),
  ('attList -> ID DOSPT tipo_var','attList',3,'p_attList','gramatica.py',353),
  ('declareStructST -> ID DOSPT ID','declareStructST',3,'p_declareStruct','gramatica.py',367),
  ('assignAccessST -> ID PUNTO ID IGUAL expresion','assignAccessST',5,'p_assignAccess','gramatica.py',372),
  ('l_exp -> l_exp COMA expresion','l_exp',3,'p_list_exp_instr','gramatica.py',380),
  ('l_exp -> expresion','l_exp',1,'p_expresiones_expresion','gramatica.py',387),
  ('funcion_instr -> FUNC ID PARIZQ PARDER DOSPT tipo_var instrucciones END PTCOMA','funcion_instr',9,'p_funcion_instr','gramatica.py',392),
  ('funcion_instr -> FUNC ID PARIZQ parametros PARDER DOSPT tipo_var instrucciones END PTCOMA','funcion_instr',10,'p_funcion_instr','gramatica.py',393),
  ('parametros -> parametros COMA ID tipo_var','parametros',4,'p_decParams','gramatica.py',400),
  ('parametros -> ID tipo_var','parametros',2,'p_decParams','gramatica.py',401),
  ('llamada_funcion_instr -> ID PARIZQ PARDER','llamada_funcion_instr',3,'p_llamada_funcion_instr','gramatica.py',411),
  ('llamada_funcion_instr -> ID PARIZQ expList PARDER','llamada_funcion_instr',4,'p_llamada_funcion_instr','gramatica.py',412),
  ('expList -> expList COMA expresion','expList',3,'p_callparams','gramatica.py',421),
  ('expList -> expresion','expList',1,'p_callparams','gramatica.py',422),
  ('expArray -> expArray COMA expresion','expArray',3,'p_expresion_array_lista','gramatica.py',432),
  ('expArray -> expresion','expArray',1,'p_expresion_array_lista','gramatica.py',433),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',441),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',442),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',443),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',444),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','gramatica.py',445),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','gramatica.py',446),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',447),
  ('expresion -> expresion NIGUALQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',448),
  ('expresion -> expresion MAYQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',449),
  ('expresion -> expresion MENQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',450),
  ('expresion -> expresion MAYIGQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',451),
  ('expresion -> expresion MENIGQUE expresion','expresion',3,'p_expresion_binaria','gramatica.py',452),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_binaria','gramatica.py',453),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','gramatica.py',454),
  ('expresion -> finalExp','expresion',1,'p_expresion_binaria','gramatica.py',455),
  ('finalExp -> llamada_funcion_instr','finalExp',1,'p_finalExp','gramatica.py',491),
  ('finalExp -> accessST','finalExp',1,'p_finalExp','gramatica.py',492),
  ('accessST -> ID PUNTO ID','accessST',3,'p_accessST','gramatica.py',499),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',508),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','gramatica.py',509),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',516),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','gramatica.py',520),
  ('expresion -> ID CORIZQ ENTERO CORDER','expresion',4,'p_expresion_identificador_array','gramatica.py',524),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','gramatica.py',533),
  ('expresion -> CORIZQ l_exp CORDER','expresion',3,'p_expresion_vector','gramatica.py',537),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','gramatica.py',542),
  ('expresion -> CARACTER','expresion',1,'p_expresion_char','gramatica.py',546),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','gramatica.py',550),
  ('expresion -> VERDADERO','expresion',1,'p_expresion_true','gramatica.py',554),
  ('expresion -> FALSO','expresion',1,'p_expresion_false','gramatica.py',558),
  ('expresion -> UPPER PARIZQ expresion PARDER','expresion',4,'p_operacion_cadena','gramatica.py',570),
  ('expresion -> LOWER PARIZQ expresion PARDER','expresion',4,'p_operacion_cadena','gramatica.py',571),
  ('expresion -> LEN PARIZQ expresion PARDER','expresion',4,'p_operacion_cadena','gramatica.py',572),
  ('expresion -> PARSE PARIZQ tipo_var COMA expresion PARDER','expresion',6,'p_operacion_cadena','gramatica.py',573),
  ('expresion -> TRUNC PARIZQ expresion PARDER','expresion',4,'p_operacion_cadena','gramatica.py',574),
  ('expresion -> STRING PARIZQ expresion PARDER','expresion',4,'p_operacion_cadena','gramatica.py',575),
  ('expresion -> CADENA POTENCIA ENTERO','expresion',3,'p_expresion_cadena_potencia','gramatica.py',586),
]
